import threading
import signal
import sys
from app.cli.consumer import consume_messages

# –ì–ª–æ–±–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è Consumer
consumer_running = True


def signal_handler(sig, frame):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Å–∏–≥–Ω–∞–ª –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–∞–º–º—ã (Ctrl+C)"""
    global consumer_running
    print("\n‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–∫–∞ Consumer...")
    consumer_running = False


def start_consumer():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç Consumer –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ"""
    thread = threading.Thread(target=consume_messages, daemon=True)
    thread.start()
    print("üîÑ Consumer –∑–∞–ø—É—â–µ–Ω...")


if __name__ == "__main__":
    # –ü–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ–º —Å–∏–≥–Ω–∞–ª—ã –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ (Ctrl+C, kill)
    signal.signal(signal.SIGINT, signal_handler)
    signal.signal(signal.SIGTERM, signal_handler)

    start_consumer()

    try:
        while consumer_running:
            pass
    except KeyboardInterrupt:
        signal_handler(None, None)

    print("‚úÖ –ü—Ä–æ–≥—Ä–∞–º–º–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.")
    sys.exit(0)
